# Copyright (c) 2023 The Regents of the University of Michigan
# All rights reserved.
# This software is licensed under the BSD 3-Clause License.
[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=64.0.0"]

[project]
name = "synced_collections"
version = "1.0.0"
description = "Interact with persistent key-value stores using Pythonic abstractions."
readme = "README.md"
# Supported versions are determined according to NEP 29.
# https://numpy.org/neps/nep-0029-deprecation_policy.html
requires-python = ">=3.8"
license = { file = "LICENSE.txt" }
maintainers = [{ name = "signac Developers", email = "signac-support@umich.edu" }]
authors = [{ name = "Vyas Ramasubramani et al.", email = "vyas.ramasubramani@gmail.com" }]
keywords = ["database", "containers"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Topic :: Database",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]

[project.optional-dependencies]
zarr = ["zarr"]
redis = ["redis"]
mongodb = ["pymongo"]

[project.urls]
Homepage = "https://signac.io"

[tools.setuptools.packages.find]
namespaces = false
exclude = ["tests*"]

[tool.black]
target-version = ['py38']
include = '\.pyi?$'
force-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.mypy_cache
    | \.tox
    | \.venv
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = 'black'

[tool.pydocstyle]
convention = "numpy"
match-dir = "^((?!\\.|tests).)*$"
ignore-decorators = "deprecated"
add-ignore = "D105, D107, D203, D204, D213"

[tool.mypy]
ignore_missing_imports = true
scripts_are_modules = true
exclude = [
    'tests/',
]

[[tool.mypy.overrides]]
follow_imports = 'skip'

[tool.pytest.ini_options]
xfail_strict = true
filterwarnings = "error"

[tool.coverage.run]
branch = true
concurrency = ["thread", "multiprocessing"]
parallel = true
source = [ "synced_collections" ]
